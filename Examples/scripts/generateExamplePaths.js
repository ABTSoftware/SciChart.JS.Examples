#!/usr/bin/env node
const fs = require("fs");
const path = require("path");

function findExampleDirectories(startPath = path.join("src", "components", "Examples")) {
    const results = [];
    function isExampleDirectory(dirPath) {
        return (
            fs.existsSync(path.join(dirPath, "exampleInfo.ts")) || fs.existsSync(path.join(dirPath, "exampleInfo.tsx"))
        );
    }
    function searchDirectory(currentPath) {
        if (isExampleDirectory(currentPath)) {
            // Get path relative to src/components/Examples and prefix with "../Examples/"
            const relativePath = path.relative(startPath, currentPath);
            results.push("../Examples/" + relativePath.replace(/\\/g, "/"));
            return;
        }
        const items = fs.readdirSync(currentPath);
        for (const item of items) {
            const itemPath = path.join(currentPath, item);
            if (fs.statSync(itemPath).isDirectory()) {
                searchDirectory(itemPath);
            }
        }
    }
    searchDirectory(startPath);
    return results;
}

const directories = findExampleDirectories();
const prefix = `// THIS FILE IS generated by the generateExamplePaths script, do not edit//
export default `;
const fileContent = prefix + JSON.stringify(directories, null, 4) + ";\n";
const outputPath = path.join("src", "components", "AppRouter", "examplePaths.ts");
fs.writeFileSync(outputPath, fileContent, "utf8");
console.log("examplePaths.ts generated successfully.");
